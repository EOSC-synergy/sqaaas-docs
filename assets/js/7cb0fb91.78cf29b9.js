"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[26],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=u(n),d=a,f=h["".concat(l,".").concat(d)]||h[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},989:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Overview of the QAA module"},l=void 0,u={unversionedId:"quality_assessment_and_awarding/intro",id:"quality_assessment_and_awarding/intro",isDocsHomePage:!1,title:"Overview of the QAA module",description:"The Quality Assessment & Awarding (QAA) module analyzes the level of",source:"@site/docs/quality_assessment_and_awarding/intro.md",sourceDirName:"quality_assessment_and_awarding",slug:"/quality_assessment_and_awarding/intro",permalink:"/quality_assessment_and_awarding/intro",version:"current",frontMatter:{title:"Overview of the QAA module"},sidebar:"tutorialSidebar",previous:{title:"Summary report",permalink:"/pipeline_as_a_service/summary"},next:{title:"Badging in EOSC-Synergy",permalink:"/quality_assessment_and_awarding/synergy_badging_approach"}},c=[{value:"What does the QAA module bring?",id:"what-does-the-qaa-module-bring",children:[]},{value:"What happens under the hood?",id:"what-happens-under-the-hood",children:[]},{value:"Certifying the results",id:"certifying-the-results",children:[]}],p={toc:c};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Quality Assessment & Awarding (QAA)")," module analyzes the level of\ncompliance of a given code repository with a set of\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/indigo-dc/sqa-baseline"},"standards for software"),"."),(0,o.kt)("h2",{id:"what-does-the-qaa-module-bring"},"What does the QAA module bring?"),(0,o.kt)("p",null,"For any given code repository the QAA performs an assessment through the\nselection and subsquent execution of the right set of open source tools. The\ntools that will be ran for each quality criterion (such as licensing,\ndocumentation, unit or security testing) are defined beforehand, and their\noutputs are parsed in order to certify whether such criterion was successfully\nor unsuccessfully fulfilled."),(0,o.kt)("p",null,"With this information the QAA provides two main outcomes:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"A ",(0,o.kt)("strong",{parentName:"li"},"quality report")," with the results of the assessment. The validity of\neach quality criterion is computed according to the outputs provided by the\ntools."),(0,o.kt)("li",{parentName:"ol"},"A ",(0,o.kt)("strong",{parentName:"li"},"digital badge")," highlighting the achievements of the software. The\nSQAaaS supports three of badges for software that, from lowest to highest\nlevels of quality are: bronze, silver and gold.")),(0,o.kt)("h2",{id:"what-happens-under-the-hood"},"What happens under the hood?"),(0,o.kt)("p",null,"Unsurprinsingly, the assessment process uses a CI/CD pipeline in order to\nexecute the complete set of tools that will evaluate the multiple quality\nattributes covered in the criteria. The pipeline is composed by several stages\nand defined according to the following requirements:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"each stage in the pipeline executes a single tool,"),(0,o.kt)("li",{parentName:"ul"},"the stages are run sequentially, and"),(0,o.kt)("li",{parentName:"ul"},"the execution of the pipeline is not interrupted if a stage fails.")),(0,o.kt)("h2",{id:"certifying-the-results"},"Certifying the results"),(0,o.kt)("p",null,"The selection and execution of the appropriate tools that take part in the\nquality assessment process must be accompanied by the validation of their\noutputs. Thus, it is not enough to just rely on the exit status of each tool,\nbut also to inspect the output of the tool as the only way to ensure that any\ngiven quality attribute has been properly evaluated."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Digital badges are the result of the certification process"),". They are issued\nusing the ",(0,o.kt)("a",{parentName:"p",href:"https://info.badgr.com/"},"Badgr platform")," that implements the ",(0,o.kt)("a",{parentName:"p",href:"https://openbadges.org/"},"Open\nBadges specification"),". Hence, each badge has\nassociated metadata that is used by the SQAaaS to store relevant data about\nthe quality assessment process, such as pointers to the standard (with the\ndefinition of the quality criteria), or the build data, using permanent links\nto the continuous integration (CI) system. The image below shows the metadata,\nas it is displayed by Badgr, for an awarded badge:"),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"/img/badge_metadata.png",alt:"Badge metadata"})))}h.isMDXComponent=!0}}]);